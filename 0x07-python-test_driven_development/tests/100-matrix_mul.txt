#100-matrix_mul.txt
============================
How to use 100-matrix_mul.py
============================

Importing function from the module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Multiplying two matrices
    >>> matrix_mul([[7, 2], [6, 2]], [[5, 1], [8, 4]])
    [[7, 17], [5, 21]]

Multiplying two matrices 2
    >>> matrix_mul([[3, 5]], [[5, 7], [9, 8]])
    [[56, 6]]

Multiplying two matrices 3
    >>> list1 = [[19, 4, 4], [7, 5, 9], [13, 5, 29]]
    >>> list2 = [[5, -11, 78], [20, -11, 5], [7, -13, 30]]
    >>> matrix_mul(list1, list2)
    [45, -87, 10], [46, -33, 47], [10, -39, 52]]

Multiplying two matrices 4
    >>> matrix_mul([[3, 5, 9]], [[1], [4], [7]])
    [[77]]

Passing None as a matrix
    >>> matrix_mul(None, None)
    Traceback (most recent call last):
    TypeError: m_a must be a list

Passing None as a matrix
    >>> matrix_mul([[3, 3]], None)
    Traceback (most recent call last):
    TypeError: m_b must be a list

Passing a tuple as a matrix
    >>> matrix_mul((5, 7, 6), [[3.3], [9.7], [5.7]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

Passing a string as a matrix
    >>> matrix_mul([[3, 7], [7, 9]], "kenya")
    Traceback (most recent call last):
    TypeError: m_b must be a list

Passing a list of tuples
   >>> matrix_mul([(2, 4, 15)], [(4), (9)])
   Traceback (most recent call last):
   TypeError: m_a must be a list of lists

Passing a list of string
   >>> matrix_mul([[]], ["kenya"])
   Traceback (most recent call last):
   TypeError: m_b must be a list of lists

Passing an empty matrix
    >>> matrix_mul([], [[7]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

Passing an empty matrix
    >>> matrix_mul([[4, 5]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

Passing a matrix with a list of strings
    >>> matrix_mul([[23, '44', 1], ['3', 5, '2']], [[9], [3]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

Passing a matrix with a list of strings 2
    >>> matrix_mul([[2, 4, 6], [3, 6, 9]], [[1], ['2'], [3]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

Passing a matrix with an empty list
    >>> matrix_mul([[14, 11, 92], [], [78, 4, 6]], [[5], [9], [10]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

Passing a matrix whose rows have different size
    >>> matrix_mul([[2, 3, 4], [5, 6, 7]], [[8], [9, 10]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

Passing two matrices that can't be multiplied
    >>> matrix_mul([[7, 5, 3], [8, 3, 21], [17, 90, 31]], [[52, 3], [1, 23]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

No one argument
    >>> matrix_mul([[7, 7]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

No arguments
    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
